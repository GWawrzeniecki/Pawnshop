<UserControl
    x:Class="PawnShop.Modules.Commodity.Dialogs.Views.PreviewPutOnSaleDialog"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:PawnShop.Modules.Commodity.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dialogs="http://prismlibrary.com/"
    xmlns:local="clr-namespace:PawnShop.Modules.Commodity.Dialogs.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:prism="http://prismlibrary.com/"
    xmlns:regionNames="clr-namespace:PawnShop.Core.Regions;assembly=PawnShop.Core"
    prism:ViewModelLocator.AutoWireViewModel="True"
    mc:Ignorable="d">

    <dialogs:Dialog.WindowStyle>
        <Style TargetType="Window">
            <Setter Property="dialogs:Dialog.WindowStartupLocation" Value="CenterScreen" />
            <Setter Property="ResizeMode" Value="NoResize" />
            <Setter Property="ShowInTaskbar" Value="True" />
            <Setter Property="SizeToContent" Value="WidthAndHeight" />
            <Setter Property="Title" Value="{Binding Title}" />
        </Style>
    </dialogs:Dialog.WindowStyle>




    <Grid Margin="10,10,10,0">

        <Grid.Resources>

            <converters:PreviewPutOnSaleDialogModeToIsEnabledConverter x:Key="PreviewPutOnSaleDialogModeToIsEnabledConverter" />
            <converters:PreviewPutOnSaleDialogModeToIsReadOnlyConverter x:Key="PreviewPutOnSaleDialogModeToIsReadOnlyConverter" />

            <Style BasedOn="{StaticResource MahApps.Styles.TextBlock}" TargetType="TextBlock">
                <Setter Property="Margin" Value="5,5,5,5" />
                <Setter Property="Padding" Value="5" />
                <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}" />
            </Style>


            <Style BasedOn="{StaticResource MahApps.Styles.TextBox}" TargetType="TextBox">
                <Setter Property="Margin" Value="0,5,5,15" />
                <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="IsReadOnly" Value="True" />
            </Style>

            <Style BasedOn="{StaticResource MahApps.Styles.ComboBox}" TargetType="ComboBox">
                <Setter Property="Margin" Value="0,15,5,15" />
                <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}" />
                <Setter Property="IsEnabled" Value="False" />
            </Style>

        </Grid.Resources>


        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <GroupBox
            Grid.Row="0"
            Margin="0,0,0,15"
            Header="Informacje podstawowe">
            <Grid x:Name="Grid">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <TextBlock
                    Grid.Row="0"
                    Grid.Column="0"
                    Text="Nazwa towaru:" />

                <TextBlock
                    Grid.Row="1"
                    Grid.Column="0"
                    Text="Opis towaru:" />

                <TextBlock
                    Grid.Row="2"
                    Grid.Column="0"
                    Text="Kategoria towaru:" />

                <TextBlock
                    Grid.Row="3"
                    Grid.Column="0"
                    Text="Stan techniczny:" />

                <TextBlock
                    Grid.Row="4"
                    Grid.Column="0"
                    Text="J.m:" />

                <TextBlock
                    Grid.Row="5"
                    Grid.Column="0"
                    Text="Przyjęt za:" />

                <TextBox
                    Grid.Row="0"
                    Grid.Column="1"
                    Text="{Binding ContractItemName, Mode=TwoWay, ValidatesOnDataErrors=True, Delay=400, UpdateSourceTrigger=PropertyChanged}" />

                <TextBox
                    Grid.Row="1"
                    Grid.Column="1"
                    MinWidth="370"
                    MinHeight="80"
                    Margin="0,0,5,0"
                    VerticalAlignment="Stretch"
                    VerticalContentAlignment="Top"
                    AcceptsReturn="True"
                    Text="{Binding ContractItemDescription, Mode=TwoWay, ValidatesOnDataErrors=True, Delay=400, UpdateSourceTrigger=PropertyChanged}" />

                <ComboBox
                    Grid.Row="2"
                    Grid.Column="1"
                    Margin="0,15,5,15"
                    ItemsSource="{Binding ContractItemCategories}"
                    SelectedItem="{Binding SelectedContractItemCategory, Mode=TwoWay, ValidatesOnDataErrors=True, Delay=400, UpdateSourceTrigger=PropertyChanged}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Category}" />
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>

                <TextBox
                    Grid.Row="3"
                    Grid.Column="1"
                    MinWidth="370"
                    MinHeight="80"
                    Margin="0,0,5,0"
                    VerticalAlignment="Stretch"
                    VerticalContentAlignment="Top"
                    AcceptsReturn="True"
                    Text="{Binding ContractItemTechnicalCondition, Mode=TwoWay, ValidatesOnDataErrors=True, Delay=400, UpdateSourceTrigger=PropertyChanged}" />

                <Grid Grid.Row="4" Grid.Column="1">

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="2*" />
                    </Grid.ColumnDefinitions>
                    <ComboBox
                        Grid.Column="0"
                        Margin="0,15,0,15"
                        ItemsSource="{Binding ContractItemUnitMeasures}"
                        SelectedItem="{Binding SelectedContractItemUnitMeasure, Mode=TwoWay, ValidatesOnDataErrors=True, Delay=400, UpdateSourceTrigger=PropertyChanged}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Measure}" />
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <TextBlock
                        Grid.Column="1"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Text="Ilość:" />
                    <TextBox
                        Grid.Column="2"
                        Margin="0,15,5,15"
                        Text="{Binding ContractItemQuantity, Mode=TwoWay, ValidatesOnDataErrors=True, Delay=400, UpdateSourceTrigger=PropertyChanged}" />
                </Grid>

                <Grid Grid.Row="5" Column="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <TextBox
                        Grid.Column="0"
                        Margin="0,5,0,15"
                        Text="{Binding ContractItemEstimatedValue, Mode=TwoWay, ValidatesOnDataErrors=True, Delay=400, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBlock
                        Grid.Column="1"
                        Margin="0,5,0,15"
                        VerticalAlignment="Center"
                        Text="PLN" />
                </Grid>


            </Grid>
        </GroupBox>

        <GroupBox
            Grid.Row="1"
            Margin="0,0,0,10"
            Header="{Binding SecondGroupBoxHeaderName, Mode=TwoWay}">

            <ContentControl x:Name="ContentControl" prism:RegionManager.RegionName="{x:Static regionNames:RegionNames.PreviewPutOnSaleDialogContentRegion}" />

        </GroupBox>

        <Grid
            Grid.Row="2"
            Grid.Column="0"
            Margin="0,0,0,10">

            <Grid.Resources>
                <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="Button">
                    <Setter Property="Margin" Value="5,0,0,0" />
                </Style>
            </Grid.Resources>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="4*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Button
                Grid.Column="2"
                Command="{Binding UpdateWorkerCommand}"
                Content="Dodaj"
                Visibility="{Binding UpdateWorkerButtonVisibility}" />
            <Button
                Grid.Column="3"
                Command="{Binding CancelCommand}"
                Content="Anuluj"
                Visibility="{Binding CancelClientButtonVisibility}" />

        </Grid>

    </Grid>
</UserControl>
